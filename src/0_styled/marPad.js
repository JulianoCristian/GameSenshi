const NAME = 'name'
const ABB = 'abb'
const TOP = 'top'
const BOTTOM = 'bottom'
const LEFT = 'left'
const RIGHT = 'right'
const REM = 'rem'

const types = [
	{ [NAME]: 'margin', [ABB]: 'm' },
	{ [NAME]: 'padding', [ABB]: 'p' },
]
const values = [
	{ [NAME]: 'auto', [ABB]: 'auto' },
	{ [NAME]: '0' + REM, [ABB]: '0' },
	{ [NAME]: '0.25' + REM, [ABB]: '1' },
	{ [NAME]: '0.5' + REM, [ABB]: '2' },
	{ [NAME]: '1' + REM, [ABB]: '3' },
	{ [NAME]: '1.5' + REM, [ABB]: '4' },
	{ [NAME]: '3' + REM, [ABB]: '5' },
]
const signs = [
	{ [NAME]: '', [ABB]: '' },
	{ [NAME]: '-', [ABB]: 'n' },
]
const directions = [
	{ [NAME]: [TOP], [ABB]: 't' },
	{ [NAME]: [BOTTOM], [ABB]: 'b' },
	{ [NAME]: [LEFT], [ABB]: 'l' },
	{ [NAME]: [RIGHT], [ABB]: 'r' },
	{ [NAME]: [TOP, BOTTOM], [ABB]: 'y' },
	{ [NAME]: [LEFT, RIGHT], [ABB]: 'x' },
	{ [NAME]: [TOP, BOTTOM, LEFT, RIGHT], [ABB]: '' },
]

const marPad = {}

types.forEach(type => {
	signs.forEach(sign => {
		values.forEach(value => {
			directions.forEach(direction => {
				marPad[
					type[ABB] + direction[ABB] + '_' + sign[ABB] + value[ABB]
				] = direction[NAME].reduce((acc, name) => {
					return (acc = `${acc}
${type[NAME]}-${name}:${value[NAME]};`)
				}, '')
			})
		})
	})
})

export const {
	mt_auto,
	mb_auto,
	ml_auto,
	mr_auto,
	mx_auto,
	my_auto,
	m_auto,
	mt_0,
	mb_0,
	ml_0,
	mr_0,
	mx_0,
	my_0,
	m_0,
	mt_1,
	mb_1,
	ml_1,
	mr_1,
	mx_1,
	my_1,
	m_1,
	mt_2,
	mb_2,
	ml_2,
	mr_2,
	mx_2,
	my_2,
	m_2,
	mt_3,
	mb_3,
	ml_3,
	mr_3,
	mx_3,
	my_3,
	m_3,
	mt_4,
	mb_4,
	ml_4,
	mr_4,
	mx_4,
	my_4,
	m_4,
	mt_5,
	mb_5,
	ml_5,
	mr_5,
	mx_5,
	my_5,
	m_5,
	mt_n1,
	mb_n1,
	ml_n1,
	mr_n1,
	mx_n1,
	my_n1,
	m_n1,
	mt_n2,
	mb_n2,
	ml_n2,
	mr_n2,
	mx_n2,
	my_n2,
	m_n2,
	mt_n3,
	mb_n3,
	ml_n3,
	mr_n3,
	mx_n3,
	my_n3,
	m_n3,
	mt_n4,
	mb_n4,
	ml_n4,
	mr_n4,
	mx_n4,
	my_n4,
	m_n4,
	mt_n5,
	mb_n5,
	ml_n5,
	mr_n5,
	mx_n5,
	my_n5,
	m_n5,
	pt_auto,
	pb_auto,
	pl_auto,
	pr_auto,
	px_auto,
	py_auto,
	p_auto,
	pt_0,
	pb_0,
	pl_0,
	pr_0,
	px_0,
	py_0,
	p_0,
	pt_1,
	pb_1,
	pl_1,
	pr_1,
	px_1,
	py_1,
	p_1,
	pt_2,
	pb_2,
	pl_2,
	pr_2,
	px_2,
	py_2,
	p_2,
	pt_3,
	pb_3,
	pl_3,
	pr_3,
	px_3,
	py_3,
	p_3,
	pt_4,
	pb_4,
	pl_4,
	pr_4,
	px_4,
	py_4,
	p_4,
	pt_5,
	pb_5,
	pl_5,
	pr_5,
	px_5,
	py_5,
	p_5,
	pt_n1,
	pb_n1,
	pl_n1,
	pr_n1,
	px_n1,
	py_n1,
	p_n1,
	pt_n2,
	pb_n2,
	pl_n2,
	pr_n2,
	px_n2,
	py_n2,
	p_n2,
	pt_n3,
	pb_n3,
	pl_n3,
	pr_n3,
	px_n3,
	py_n3,
	p_n3,
	pt_n4,
	pb_n4,
	pl_n4,
	pr_n4,
	px_n4,
	py_n4,
	p_n4,
	pt_n5,
	pb_n5,
	pl_n5,
	pr_n5,
	px_n5,
	py_n5,
	p_n5,
} = marPad
